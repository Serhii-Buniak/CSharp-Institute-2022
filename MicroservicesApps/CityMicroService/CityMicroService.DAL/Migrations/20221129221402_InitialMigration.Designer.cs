// <auto-generated />
using System;
using CityMicroService.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CityMicroService.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20221129221402_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("CategoryEvent", b =>
                {
                    b.Property<long>("CategoriesId")
                        .HasColumnType("bigint");

                    b.Property<long>("EventsId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoriesId", "EventsId");

                    b.HasIndex("EventsId");

                    b.ToTable("CategoryEvent");

                    b.HasData(
                        new
                        {
                            CategoriesId = 1L,
                            EventsId = 1L
                        },
                        new
                        {
                            CategoriesId = 1L,
                            EventsId = 2L
                        },
                        new
                        {
                            CategoriesId = 2L,
                            EventsId = 2L
                        },
                        new
                        {
                            CategoriesId = 3L,
                            EventsId = 3L
                        },
                        new
                        {
                            CategoriesId = 3L,
                            EventsId = 4L
                        },
                        new
                        {
                            CategoriesId = 3L,
                            EventsId = 5L
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Category 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Category 2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Category 3"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.City", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CountryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CountryId = 1L,
                            Name = "City 1"
                        },
                        new
                        {
                            Id = 2L,
                            CountryId = 2L,
                            Name = "City 2"
                        },
                        new
                        {
                            Id = 3L,
                            CountryId = 3L,
                            Name = "City 3"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Country", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Country 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Country 2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Country 3"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Event", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<long>("GalleryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GalleryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityId = 1L,
                            GalleryId = 1L,
                            Name = "Event 1",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CityId = 1L,
                            GalleryId = 1L,
                            Name = "Event 2",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CityId = 1L,
                            GalleryId = 1L,
                            Name = "Event 3",
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CityId = 2L,
                            GalleryId = 2L,
                            Name = "Event 4",
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CityId = 3L,
                            GalleryId = 3L,
                            Name = "Event 5",
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Gallery", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Galleries");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Gallery 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Gallery 2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Gallery 3"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Image", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long?>("GalleryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GalleryId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Images");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            GalleryId = 1L,
                            Name = "Image 1"
                        },
                        new
                        {
                            Id = 2L,
                            GalleryId = 2L,
                            Name = "Image 2"
                        },
                        new
                        {
                            Id = 3L,
                            GalleryId = 2L,
                            Name = "Image 3"
                        },
                        new
                        {
                            Id = 4L,
                            GalleryId = 3L,
                            Name = "Image 4"
                        },
                        new
                        {
                            Id = 5L,
                            GalleryId = 3L,
                            Name = "Image 5"
                        },
                        new
                        {
                            Id = 6L,
                            GalleryId = 3L,
                            Name = "Image 6"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Message", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Messages");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreateAt = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            CreateAt = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            CreateAt = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            CreateAt = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 2L
                        },
                        new
                        {
                            Id = 5L,
                            CreateAt = new DateTime(2023, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UserId = 3L
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Name");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "Role 1"
                        },
                        new
                        {
                            Id = 2L,
                            Name = "Role 2"
                        },
                        new
                        {
                            Id = 3L,
                            Name = "Role 3"
                        });
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CityId")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasAlternateKey("Email");

                    b.HasIndex("CityId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityId = 1L,
                            Email = "user1@email.com",
                            FirstName = "FirstName1",
                            LastName = "LastName1",
                            Password = "Password1",
                            Telephone = "00000000001"
                        },
                        new
                        {
                            Id = 2L,
                            CityId = 2L,
                            Email = "user2@email.com",
                            FirstName = "FirstName2",
                            LastName = "LastName2",
                            Password = "Password2",
                            Telephone = "00000000002"
                        },
                        new
                        {
                            Id = 3L,
                            CityId = 3L,
                            Email = "user3@email.com",
                            FirstName = "FirstName3",
                            LastName = "LastName3",
                            Password = "Password3",
                            Telephone = "00000000003"
                        });
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.Property<long>("RolesId")
                        .HasColumnType("bigint");

                    b.Property<long>("UsersId")
                        .HasColumnType("bigint");

                    b.HasKey("RolesId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("RoleUser");

                    b.HasData(
                        new
                        {
                            RolesId = 1L,
                            UsersId = 1L
                        },
                        new
                        {
                            RolesId = 2L,
                            UsersId = 1L
                        },
                        new
                        {
                            RolesId = 2L,
                            UsersId = 2L
                        },
                        new
                        {
                            RolesId = 3L,
                            UsersId = 3L
                        });
                });

            modelBuilder.Entity("CategoryEvent", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.Category", null)
                        .WithMany()
                        .HasForeignKey("CategoriesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityMicroService.DAL.Entities.Event", null)
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.City", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Event", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.City", "City")
                        .WithMany("Events")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityMicroService.DAL.Entities.Gallery", "Gallery")
                        .WithMany()
                        .HasForeignKey("GalleryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityMicroService.DAL.Entities.User", "User")
                        .WithMany("Events")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Gallery");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Image", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.Gallery", "Gallery")
                        .WithMany("Images")
                        .HasForeignKey("GalleryId");

                    b.Navigation("Gallery");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Message", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.User", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("RoleUser", b =>
                {
                    b.HasOne("CityMicroService.DAL.Entities.Role", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CityMicroService.DAL.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.City", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Country", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.Gallery", b =>
                {
                    b.Navigation("Images");
                });

            modelBuilder.Entity("CityMicroService.DAL.Entities.User", b =>
                {
                    b.Navigation("Events");

                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
